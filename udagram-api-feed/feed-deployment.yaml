apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-feed
  labels:
    app: backend-feed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-feed
  template:
    metadata:
      labels:
        app: backend-feed
    spec:
      containers:
      - name: backend-user
        image: jaseye/udagram-api-user:main
        ports:
        - containerPort: 8080
        imagePullPolicy : Always
        resources:
          requests:
            memory: "1000Mi"
            cpu: "250m"
          limits:
            memory: "2000Mi"
            cpu: "500m"
        env:
           - name: POSTGRES_USERNAME
             valueFrom:
               secretKeyRef:
                 name: env-secret
                 key: postgres_username
           - name: POSTGRES_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: env-secret
                 key: postgres_password
           - name: POSTGRES_HOST
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: postgres_host 
           - name: POSTGRES_DB
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: postgres_db
           - name: AWS_BUCKET
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: aws_bucket
           - name: AWS_REGION
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: aws_region
           - name: AWS_PROFILE
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: aws_profile
           - name: URL
             valueFrom:
               configMapKeyRef:
                 name: env-configmap
                 key: url
           - name: JWT_SECRET
             valueFrom:
               secretKeyRef:
                 name: env-secret
                 key: jwt_secret           
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      volumes:
           - name: aws-secret
             secret:
               secretName: aws-secret
               optional: false 